/* src/lib/styles/gallery.css */
/* EXACT COPY of CSS from WORKING BEST 2 copy.html - DO NOT MODIFY */

/* Register interpolable custom properties */
@property --grid-spacer {
  syntax: "<length>";
  initial-value: 12px;
  inherits: true;
}

@property --grid-spacer-center {
  syntax: "<length>";
  initial-value: 12px;
  inherits: true;
}

@property --grid-spacer-micro {
  syntax: "<length>";
  initial-value: 0px;
  inherits: true;
}

@property --bg-color {
  syntax: "<color>";
  initial-value: #ffffff;
  inherits: true;
}

/* Root CSS variables for universal unit system */
:root {
  --base-unit: 72px; /* Desktop default */
  --unit: var(--base-unit); /* Unit inherits from base-unit for responsiveness */
  --transition-duration: 0ms;
  --grid-color: #cdceda; /* Grid line color */
  --bg-color: #ffffff; /* Master background color */
  --text-color: #000000; /* Text color variable */
  --crosshair-color: #000000; /* Crosshair/crop mark color */
  --dot-color: var(--grid-color);
  --dot-size: .5px;
  --grid-spacing: calc(var(--unit)/8);
  --grid-spacer: 12px; /* Default spacer for corner radial gradients in feed view */
  --grid-spacer-center: 36px; /* Spacer for center radial gradient in feed view (1 unit) */
  --grid-spacer-micro: 0px; /* Spacer for micro radial gradients in feed view (1 unit) */
  --microdot: radial-gradient(circle at center, var(--dot-color) var(--dot-size), transparent calc(var(--dot-size) + 0.5px));
}

/* Tablet breakpoint - must match JavaScript BREAKPOINTS.TABLET exactly */
@media (max-width: 1024px) and (min-width: 769px) {
  :root {
    --base-unit: 60px;
    --unit: var(--base-unit); /* Ensure unit updates with base-unit */
  }
}

/* Mobile breakpoint - must match JavaScript BREAKPOINTS.MOBILE exactly */
@media (max-width: 768px) {
  :root {
    --base-unit: 48px;
    --unit: var(--base-unit); /* Ensure unit updates with base-unit */
  }
}

/* Mobile breakpoint - smaller padding to match 0px margins for testing */
@media (max-width: 768px) {
  .grid {
    padding-left: 0px;
    padding-right: 0px;
  }
}

/* Basic styling for all elements */
* {
  -webkit-font-smoothing: subpixel-antialiased;
  -moz-osx-font-smoothing: grayscale;
  box-sizing: border-box;
}

html {
  margin: 0; padding: 0;
  font-family: system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen, Ubuntu, Cantarell, "Open Sans", "Helvetica Neue", sans-serif;
  font-size: 12px;
  text-transform: uppercase;
  letter-spacing: 0.05em;
  overflow-y: auto;
}

/* Body styling with dynamic margins and centering */
body {
  margin: 24px; /* Initial margin, will be overridden by JS */
  padding: 0;
  background: var(--bg-color);
  transition: --bg-color 100ms linear;
  position: relative;
  display: flex;
  flex-direction: column;
  align-items: center; /* Center content wrapper horizontally */
  min-height: auto; /* Allow body to hug content height */
}

/* Content wrapper with grid pattern */
.content-wrapper {
  position: relative;
  width: 100%; /* Ensure it takes full width up to the max-width */
  display: flex;
  flex-direction: column;
  align-items: center; /* Center contents horizontally */
  background-position: center top;
  margin: 0 auto; /* Center the content wrapper */
  
  /* Grid background pattern */
  background-image:
  repeating-radial-gradient(circle at 0% 0%,  var(--bg-color), var(--bg-color) var(--grid-spacer), transparent var(--grid-spacer),  transparent 100%),
  repeating-radial-gradient(circle at 0% 100%,  var(--bg-color), var(--bg-color) var(--grid-spacer), transparent var(--grid-spacer),  transparent 100%),
  repeating-radial-gradient(circle at 100% 100%,  var(--bg-color), var(--bg-color) var(--grid-spacer), transparent var(--grid-spacer),  transparent 100%),
  repeating-radial-gradient(circle at 100% 0%,  var(--bg-color), var(--bg-color) var(--grid-spacer), transparent var(--grid-spacer),  transparent 100%),

  repeating-radial-gradient(circle at 0% 50%,  var(--bg-color), var(--bg-color) var(--grid-spacer-micro), transparent var(--grid-spacer-micro),  transparent 100%),
  repeating-radial-gradient(circle at 50% 0%,  var(--bg-color), var(--bg-color) var(--grid-spacer-micro), transparent var(--grid-spacer-micro),  transparent 100%),
  repeating-radial-gradient(circle at 100% 50%,  var(--bg-color), var(--bg-color) var(--grid-spacer-micro), transparent var(--grid-spacer-micro),  transparent 100%),
  repeating-radial-gradient(circle at 50% 100%,  var(--bg-color), var(--bg-color) var(--grid-spacer-micro), transparent var(--grid-spacer-micro),  transparent 100%),

  repeating-linear-gradient(to right, var(--grid-color) 0 1px, transparent 1px var(--unit)),
  repeating-linear-gradient(to bottom, var(--grid-color) 0 1px, transparent 1px var(--unit)),

  repeating-radial-gradient(circle at 50% 50%,  var(--bg-color), var(--bg-color) var(--grid-spacer-center), transparent var(--grid-spacer-center),  transparent 100%),

  repeating-linear-gradient(to right, transparent 0 calc(var(--unit) / 2), var(--grid-color) calc(var(--unit) / 2) calc(var(--unit) / 2 + 1px), transparent calc(var(--unit) / 2 + 1px) var(--unit)),
  repeating-linear-gradient(to bottom, transparent 0 calc(var(--unit) / 2), var(--grid-color) calc(var(--unit) / 2) calc(var(--unit) / 2 + 1px), transparent calc(var(--unit) / 2 + 1px) var(--unit));
  
  background-size: var(--unit) var(--unit);
  background-position: var(--unit) 0; /* Offset by half a unit */
  box-shadow: inset 0 0 0 1px var(--bg-color),  0 0 0 6px var(--bg-color);; /* crisp border frame */
  transition: 
    --grid-spacer 200ms linear,
    --grid-spacer-center 200ms linear,
    --grid-spacer-micro 200ms linear;
}

/* Grid container for all content */
.grid {
  opacity: 1;
  position: relative;
  z-index: 2; /* Above the background */
  width: 100%; /* Full width of the content wrapper */
  display: flex;
  flex-direction: column;
  align-items: center; /* Center grid items horizontally */
  gap: var(--unit); /* Default gap for feed view */
  padding: calc(var(--unit)) 24px var(--unit) 24px;
  /* transition: opacity 0.3s ease; */
  min-height: auto; /* Remove any minimum height constraints */
}

/* Responsive grid padding to match margin behavior */
/* Tablet breakpoint - reduce padding */
@media (max-width: 1024px) and (min-width: 769px) {
  .grid {
    padding-left: 24px;
    padding-right: 24px;
  }
}

/* Hide grid when lightbox is active */
body.lightbox-active .grid {
  opacity: 0;
}

/* Adjust grid-spacer variables in lightbox view */
body.lightbox-active {
  --bg-color: #fff; /* Black background for lightbox view */
}

body.lightbox-active .content-wrapper {
  --grid-spacer: calc(var(--unit) / 2); /* Half a unit (36px) for lightbox view */
}

/* Basic element styling */
p { margin: 0 0 1em 0; }

/* Hide scrollbars across browsers */
::-webkit-scrollbar { display: none; }
html, body, div {
  -ms-overflow-style: none;  /* IE and Edge */
  scrollbar-width: none;  /* Firefox */
}

body.grid-view {
  background-image: var(--microdot);
  background-size: var(--grid-spacing) var(--grid-spacing);
  background-position: top center;
}

/* Grid view adjustments */
body.grid-view .content-wrapper {
  /* background-size: calc(var(--unit)/2) calc(var(--unit)/2);  */
  background-color: var(--bg-color); /* Ensure background color is consistent */
  --grid-spacer: 6px; /* Smaller spacer for grid view */
  --grid-spacer-center: 6px; /* Smaller center spacer for grid view */
  --grid-spacer-micro: 6px; /* Smaller micro spacers for grid view */
  min-height: auto; /* Allow content wrapper to hug content height */
}

/* Control Overlay Styles */
.control-overlay {
  position: fixed;
  bottom: 20px;
  right: 20px;
  z-index: 100;
  display: none; /* Hidden by default, shown in grid view */
}
body.grid-view .control-overlay {
  display: block;
}
.control-panel {
  background: var(--bg-color);
  border-radius: 8px;
  box-shadow: 0 0 0 2px var(--bg-color);
  padding: 12px;
  width: 220px;
}
.control-group {
  margin-bottom: 8px;
}
.control-group label {
  display: block;
  margin-bottom: 4px;
  font-size: 12px;
  font-weight: bold;
}
.control-group input {
  width: 100%;
}
.control-info {
  font-size: 12px;
  text-align: right;
  color: var(--text-color);
}
.mode-toggle-container {
position: fixed;
top: 0;
left: 0;
right: 0;
z-index: 10002; /* Higher than lightbox z-index (10001) */
display: flex;
justify-content: center;
align-items: center;
height: calc(var(--unit) * 2);
width: 100%;
box-sizing: border-box;
}
.mode-toggle {
  cursor: pointer;
  user-select: none;
  width: calc(var(--unit) * 2);
  height: calc(var(--unit) * 2);
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 12px;
  background: transparent;
  color: var(--text-color);
  text-transform: uppercase;
  position: relative;
  /* opacity: 0.5; */
  /* transition: opacity 0.2s ease; */
  font-weight: normal;
  padding: 12px;
}

.mode-toggle-inner {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 100%;
  height: 100%;
  /* background-color: var(--bg-color); */
  border-radius: 6px;
  /* border: 1px solid var(--grid-color); */
}

.mode-toggle.active {
  opacity: 1;
}

.mode-toggle.active::after {
  content: '';
  position: absolute;
  bottom: 0;
  left: 50%;
  transform: translateX(-50%) rotate(180deg);
  width: 0;
  height: 0;
  border-left: 0.5em solid transparent;
  border-right: 0.5em solid transparent;
  border-top: 0.866em solid currentColor;
}
.grid.grid-layout {
  display: grid;
  /* We'll set the grid-template-columns dynamically in JavaScript */
  gap: calc(var(--unit)/2);
  justify-content: center;
  align-content: start;
  align-items: start; /* Align items to start instead of center */
  justify-items: stretch; /* Make items fill the full width of their grid cells */
  margin: 0 auto; /* Center the grid container */
}
.grid.grid-layout .grid-item:not(.image-item):not(.mode-toggle) { display: none; }
.grid.grid-layout .grid-item.image-item {
  width: 100%; /* Ensure full width in grid cells */
  justify-self: stretch; /* Stretch to fill grid cell width */
}
.grid-item {
  position: relative;
  overflow: hidden;
  display: flex;
  align-items: center;
  justify-content: center;
transition: width var(--transition-duration) linear, height var(--transition-duration) linear;
}
.grid-item:not(.image-item) { padding: 12px; }
.text-inner {
  width: 100%;
  display: flex; 
  align-items: center; 
  justify-content: center;
  flex-direction: column;
  text-transform: uppercase;
  font-size: 12px; 
  line-height: 1.2;
  text-align: center; 
  color: var(--text-color);
  background: var(--bg-color);
  border-radius: 6px;
  height: 100%;
  position: relative;
  z-index: 1; /* Ensure text is above the vertical line */
}


.project-description > .text-inner {
  height: calc(var(--unit) * 2 - 24px);
  min-height: calc(var(--unit) * 2 - 24px);
  max-height: calc(var(--unit) * 2 - 24px);
  box-sizing: border-box;
  padding: 12px;
}
.text-inner .more-info { margin-top: 8px; cursor: pointer; }

.project-description {
  width: 100%;
  overflow: visible; /* Changed from hidden to allow crop marks to extend outside */
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  justify-content: flex-start;
  position: relative; /* For absolute positioning of crop marks */
}

/* Crop marks for project-description - hidden by default */
.project-description::before,
.project-description::after,
.project-description-tr-mark,
.project-description-bl-mark {
  content: '';
  position: absolute;
  width: var(--unit);
  height: var(--unit);
  pointer-events: none !important; /* Critical: ensures clicks pass through to elements beneath */
  z-index: -1; /* Place behind content to ensure they don't interfere with clicks */
  opacity: 0;
}

/* Show crop marks on hover */
.project-description:hover::before,
.project-description:hover::after,
.project-description:hover .project-description-tr-mark,
.project-description:hover .project-description-bl-mark {
  opacity: 1;
}

/* Top-left crop mark */
.project-description::before {
  top: calc(var(--unit) * -1);
  left: calc(var(--unit) * -1);
  border-bottom: 1px solid var(--crosshair-color);
  border-right: 1px solid var(--crosshair-color);
}

/* Bottom-right crop mark */
.project-description::after {
  bottom: calc(var(--unit) * -1 - 1px);
  right: calc(var(--unit) * -1 - 1px);
  border-top: 1px solid var(--crosshair-color);
  border-left: 1px solid var(--crosshair-color);
}

/* Top-right crop mark */
.project-description-tr-mark {
  top: calc(var(--unit) * -1 + 1px);
  right: calc(var(--unit) * -1);
  border-bottom: 1px solid var(--crosshair-color);
  border-left: 1px solid var(--crosshair-color);
}

/* Bottom-left crop mark */
.project-description-bl-mark {
  bottom: calc(var(--unit) * -1);
  left: calc(var(--unit) * -1 + 1px);
  border-top: 1px solid var(--crosshair-color);
  border-right: 1px solid var(--crosshair-color);
}
.project-description .additional-block {
  overflow: hidden;
  max-height: 0;
  opacity: 0;
transition: all var(--transition-duration) linear;
  padding: 0 !important;
  width: 100%;
  box-sizing: border-box;
}
.project-description .additional-block.expanded {
  opacity: 1;
  padding: 12px !important;
  background: var(--bg-color);
  flex-grow: 1;
  /* Height will be set dynamically in JavaScript */
}
/* Exception to the all-caps style for the additional information panel */
.project-description .additional-block .text-inner {
  text-transform: none; /* Override the uppercase style */
  font-size: 14px; 
  line-height: 1.4;
  text-align: left; 
  align-items: flex-start;
  color: var(--text-color);
  height: auto; /* Override the fixed height */
  min-height: auto;
  max-height: none;
  letter-spacing: normal; /* Reset letter spacing */
}

.image-item { 
  cursor: pointer; 
  overflow: visible;
  display: flex;
  flex-direction: column;
  position: relative; /* Position relative for absolute positioning of crop marks */
}
.image-item .image-container {
  width: 100%;
  flex-grow: 1;
  position: relative;
  display: flex;
  overflow: hidden; /* Keep this for image cropping */
  background: var(--bg-color);
  box-shadow: 0 0 0 6px var(--bg-color);
}

/* Crop marks using pseudo-elements on the image-item instead of image-container */

/* Base styles for crop marks - hidden by default */
.image-item::before,
.image-item::after,
.image-item-tr-mark,
.image-item-bl-mark {
  content: '';
  position: absolute;
  width: var(--unit);
  height: var(--unit);
  pointer-events: none !important; /* Critical: ensures clicks pass through to elements beneath */
  z-index: -1; /* Place behind content to ensure they don't interfere with clicks */
  opacity: 0; /* Hidden by default */
  /* No transition for immediate effect */
}

/* Half-sized crop marks in grid view */
.grid-view .image-item::before,
.grid-view .image-item::after,
.grid-view .image-item-tr-mark,
.grid-view .image-item-bl-mark {
  width: calc(var(--unit) / 2);
  height: calc(var(--unit) / 2);
}

/* Adjust positions for crop marks in grid view */
.grid-view .image-item::before {
  top: calc(var(--unit) * -0.5);
  left: calc(var(--unit) * -0.5 + 0px); /* Half the original adjustment */
}

.grid-view .image-item::after {
  bottom: calc(var(--unit) * -.5 - 1px); /* Position from bottom of image container */
  right: calc(var(--unit) * -0.5 - 1px); /* Half the original adjustment */
}

.grid-view .image-item-tr-mark {
  top: calc(var(--unit) * -0.5 + 1px); /* Half the original adjustment */
  right: calc(var(--unit) * -0.5);
}

.grid-view .image-item-bl-mark {
  bottom: calc(var(--unit) * -0.5); /* Position from bottom of image container */
  left: calc(var(--unit) * -0.5 + 1px); /* Half the original adjustment */
}

/* Show crop marks on hover */
.image-item:hover::before,
.image-item:hover::after,
.image-item:hover .image-item-tr-mark,
.image-item:hover .image-item-bl-mark {
  opacity: 1;
}

/* Top-left crop mark */
.image-item::before {
  top: calc(var(--unit) * -1);
  left: calc(var(--unit) * -1);
  border-bottom: 1px solid var(--crosshair-color);
  border-right: 1px solid var(--crosshair-color);
}

/* Bottom-right crop mark */
.image-item::after {
  bottom: -1px; /* Adjust 1px down */
  right: calc(var(--unit) * -1 - 1px); /* Adjust 2px total to fix misalignment */
  border-top: 1px solid var(--crosshair-color);
  border-left: 1px solid var(--crosshair-color);
}

/* Top-right crop mark */
.image-item-tr-mark {
  top: calc(var(--unit) * -1 + 1px); /* Adjust 1px down */
  right: calc(var(--unit) * -1); /* Reset to original position */
  border-bottom: 1px solid var(--crosshair-color);
  border-left: 1px solid var(--crosshair-color);
}

/* Bottom-left crop mark */
.image-item-bl-mark {
  bottom: 0; /* Align with bottom of caption */
  left: calc(var(--unit) * -1 + 1px); /* Adjust 1px to the right */
  border-top: 1px solid var(--crosshair-color);
  border-right: 1px solid var(--crosshair-color);
}
.image-item img { 
  width: 100%; 
  height: 100%; 
  display: block; 
  box-shadow: 0 0 0 2px var(--bg-color);
}
.image-item .caption {
  width: 100%;
  padding: 12px;
  height: var(--unit);
  display: flex;
  align-items: center;
  overflow: hidden;
  position: relative;
}

.image-item .caption::before {
  content: '';
  position: absolute;
  top: 0;
  left: 50%;
  height: 100%;
  width: 1px;
  background-color: var(--grid-color); /* Use grid color by default */
  z-index: 0;
}

/* Change vertical line to black on hover */
.image-item:hover .caption::before {
  background-color: #000;
}

/* Show captions in feed view (single column), hide in grid view (multi-column) */
.grid.grid-layout .image-item .caption {
  display: none;
}
.fill .image-container img { object-fit: cover; } 
.fit .image-container img { object-fit: contain; }
/* CSS for the fill/fit mode labels */
.label {
  position: absolute; top: 8px; left: 8px;
  background: var(--bg-color); padding: 2px 4px;
  font-size: 10px; color: var(--text-color); border-radius: 2px;
  pointer-events: none;
}

/* Hide controls when the hide-controls class is applied to the body */
body.hide-controls .drag-handle,
body.hide-controls .upload-controls,
body.hide-controls .lightbox-controls {
  display: none !important;
}

/* Drag and drop styles */
.draggable {
  position: relative;
  cursor: grab;
}

.dragging {
  opacity: 0.5;
  cursor: grabbing;
}

.drag-ghost {
  opacity: 0.2;
}

.drag-handle {
  position: absolute;
  top: 10px;
  left: 10px;
  width: 24px;
  height: 24px;
  background-color: rgba(255, 255, 255, 0.8);
  border-radius: 4px;
  display: flex;
  justify-content: center;
  align-items: center;
  cursor: grab;
  z-index: 10;
  font-size: 18px;
  color: #333;
  box-shadow: 0 0 0 1px rgba(0, 0, 0, 0.1);
}

/* Editable caption styles */
.text-inner[contenteditable=true] {
  cursor: text;
  padding: 2px 4px;
  border-radius: 2px;
  transition: background-color 0.2s ease;
}

.text-inner[contenteditable=true]:hover,
.text-inner[contenteditable=true]:focus {
  background-color: rgba(255, 255, 255, 0.9);
  outline: none;
  box-shadow: 0 0 0 1px rgba(0, 0, 0, 0.1);
}
.upload-block { position: relative; }
.upload-block.dragover { outline: 2px dashed var(--text-color); }
.upload-controls {
  position: absolute; bottom: 8px; right: 8px;
  display: flex; gap: 4px; background: var(--bg-color); padding: 4px;
  z-index: 2;
}
.upload-controls button { font-size: 10px; padding: 2px 4px; }

/* Lightbox View */
.lightbox-view-container {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 10000;
  display: none;
  flex-direction: column;
}

.lightbox-view-container.active {
  display: flex;
}

.lightbox-container {
  position: relative;
  width: 100%;
  height: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
}

.lightbox-image {
  position: relative;
  max-width: 100%;
  max-height: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
  overflow: hidden;
}

.lightbox-image img {
  max-width: 100%;
  max-height: 100vh;
  object-fit: contain;
  box-shadow: none; /* Remove shadow for images in lightbox */
}

.lightbox-image.fill img {
  width: 100%;
  height: 100vh;
  object-fit: cover;
}

.lightbox-nav {
  position: absolute;
  top: 0;
  width: 50%;
  height: 100%;
  cursor: pointer;
  z-index: 10001;
}

.lightbox-prev {
  left: 0;
}

.lightbox-next {
  right: 0;
}

.lightbox-caption {
  color: white;
  font-size: 14px;
  text-align: center;
  z-index: 10002;
}

.lightbox-controls {
  position: absolute;
  bottom: 60px;
  left: 50%;
  transform: translateX(-50%);
  display: flex;
  gap: 20px;
  z-index: 10002;
  background-color: rgba(0, 0, 0, 0.5);
  padding: 8px 16px;
  border-radius: 20px;
}

.lightbox-control-btn {
  color: white;
  background: transparent;
  border: 1px solid white;
  border-radius: 50%;
  width: 30px;
  height: 30px;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  font-size: 16px;
  transition: background-color 0.2s;
}

.lightbox-control-btn:hover {
  background-color: rgba(255, 255, 255, 0.2);
}

.lightbox-mode-toggle {
  color: white;
  background: transparent;
  border: 1px solid white;
  border-radius: 4px;
  padding: 4px 8px;
  cursor: pointer;
  font-size: 12px;
  text-transform: uppercase;
}

.lightbox-mode-toggle.active {
  background-color: white;
  color: black;
}

.lightbox-info-group {
  position: absolute;
  bottom: 24px;
  left: 0;
  width: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 12px;
  z-index: 10002; /* Higher than the lightbox nav z-index (10001) */
  pointer-events: auto; /* Ensure clicks are registered */
}

#lightbox-caption {
  width: 100%;
  text-align: center;
  color: var(--text-color);
  font-size: 12px;
  text-transform: uppercase;
  letter-spacing: 0.05em;
}

.lightbox-dots {
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 3px;
}

.lightbox-close-text {
  cursor: pointer;
  opacity: 1;
  color: var(--text-color);
}

.lightbox-dot {
  width: 5px;
  height: 5px;
  border-radius: 50%;
  background-color: var(--text-color);
  opacity: 0.15;
}

.lightbox-dot.active {
  opacity: 1;
}

/* SVG View Toggle Button Styles */
#view-toggle-btn {
  cursor: pointer;
  /* background: yellow; */
  border-radius: 6px;
}

#view-toggle-btn:hover {
  background: yellow;
}

#view-toggle-svg {
  display: block;
  margin: 0 auto;
}

/* Path morphing animation */
body svg #morphing-path {
  transition: d 200ms ease-in-out;
}

/* hover state  */
body svg:hover #morphing-path {
}

/* Grid view state */
body.grid-view svg #morphing-path {
d: path("M0.92,91.43 l23.91,-23.91 m-12.86,24.26 l18.46,-24.61 m-7.2,24.88 l12.58,-25.16 m-1.15,25.33 l6.38,-25.5 m5.13,25.56 l 0 -25.62 m11.52,25.56 l-6.38,-25.5 m17.8,25.33 l-12.58,-25.16 m23.85,24.89 l-18.46,-24.61 m29.51,24.26 l-23.91,-23.91 m-66.96,12.86 l24.61,-18.46 m-13.49,18.75 l19.04,-19.04 m-7.69,19.26 l12.99,-19.48 m-1.47,19.62 l6.59,-19.77 m5.03,19.82 l 0 -19.87 m11.62,19.82 l-6.59,-19.77 m18.12,19.63 l-12.99,-19.48 m24.34,19.26 l-19.04,-19.04 m30.15,18.75 l-24.61,-18.46 m-66.88,7.19 l25.16,-12.58 m-14,12.79 l19.48,-12.99 m-8.06,13.15 l13.31,-13.31 m-1.71,13.41 l6.76,-13.51 m4.94,13.55 l 0 -13.58 m11.71,13.54 l-6.76,-13.51 m18.36,13.41 l-13.31,-13.31 m24.72,13.15 l-19.48,-12.99 m30.64,12.78 l-25.16,-12.58 m-66.77,1.16 l25.5,-6.38 m-14.31,6.48 l19.77,-6.59 m-8.32,6.68 l13.51,-6.76 m-1.85,6.81 l6.86,-6.86 m4.89,6.88 l 0 -6.9 m11.76,6.88 l-6.86,-6.86 m18.51,6.81 l-13.51,-6.76 m24.96,6.67 l-19.77,-6.59 m30.96,6.49 l-25.5,-6.38 m-66.66,-5.14 l 25.62 0 m-14.42,0 l 19.87 0 m-8.4,0 l 13.58 0 m-1.91,0 l 6.9 0 m4.87,0 l 0 0 m11.78,0 l -6.9 0 m18.57,0 l -13.58 0 m25.04,0 l -19.87 0 m31.07,0 l -25.62 0 m-66.54,-11.51 l25.5,6.38 m-14.31,-6.49 l19.77,6.59 m-8.32,-6.67 l13.51,6.76 m-1.85,-6.81 l6.86,6.86 m4.89,-6.88 l 0 6.9 m11.76,-6.88 l-6.86,6.86 m18.51,-6.81 l-13.51,6.76 m24.96,-6.68 l-19.77,6.59 m30.96,-6.48 l-25.5,6.38 m-66.43,-17.81 l25.16,12.58 m-14,-12.78 l19.48,12.99 m-8.06,-13.15 l13.31,13.31 m-1.71,-13.42 l6.76,13.51 m4.94,-13.54 l 0 13.58 m11.71,-13.55 l-6.76,13.51 m18.36,-13.4 l-13.31,13.31 m24.72,-13.15 l-19.48,12.99 m30.64,-12.79 l-25.16,12.58 m-66.33,-23.84 l24.61,18.46 m-13.49,-18.75 l19.04,19.04 m-7.69,-19.27 l12.99,19.48 m-1.47,-19.62 l6.59,19.77 m5.03,-19.82 l 0 19.87 m11.62,-19.82 l-6.59,19.77 m18.12,-19.63 l-12.99,19.48 m24.34,-19.25 l-19.04,19.04 m30.15,-18.75 l-24.61,18.46 m-66.25,-29.51 l23.91,23.91 m-12.86,-24.27 l18.46,24.61 m-7.2,-24.88 l12.58,25.16 m-1.15,-25.33 l6.38,25.5 m5.13,-25.56 l 0 25.62 m11.52,-25.56 l-6.38,25.5 m17.8,-25.33 l-12.58,25.16 m23.85,-24.89 l-18.46,24.61 m29.51,-24.25 l-23.91,23.91");
}

/* Active state for the view toggle button */
#view-toggle-btn.active svg {
  color: var(--highlight-color);
}

.grid-item.image-item {
  cursor: pointer; 
  overflow: visible;
  display: flex;
  flex-direction: column;
  position: relative; /* Position relative for absolute positioning of crop marks */
} 